version: '3.9'

services:
  app:
    build:
      context: .
    env_file:
      - .env.docker
    ports:
      - '8000:8000'
    command: >
      bash -c "python  manage.py collectstatic --noinput
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
  db:
    image: postgres:14.7-alpine
    env_file:
      - .env.docker
    ports:
      - '5432:5432'
#    healthcheck:
#      test: [ 'CMD-SHELL', 'pg_isready' ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata

  redis:
    image: redis:alpine
    container_name: redis_app
    command: redis-server --save 20 1 --loglevel warning

  celery:
    container_name: celery
    build: .
    command: >
      bash -c "celery -A config.celery worker --loglevel=info"
    links:
      - redis
    depends_on:
      - db
      - app
      - redis

  celery-beat:
    container_name: celery-beat
    build: .
    command: >
      bash -c "sleep 30 && celery -A config.celery beat --loglevel=info"
    depends_on:
      - celery

volumes:
  postgres_data: